/* autogenerated by Processing revision 1286 on 2022-10-18 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Angel extends PApplet {

//Proyecto de videojuego 2022 IDGS102
//Elaborado por: Angel Palacios Mirafuentes
//26 de septiembre de 2022

//sección de declaraciones globales
final int PNCRG=0;
final int PNINT=1;
final int PNGME=2;
final int PNCFG=3;
final int PNCRD=4;
final int PNINS=5;
final int PNSCR=6;
final int IDIOMAESP=0;
final int IDIOMAENG=1;

GameControl gc;
Idiomas idi;
ConfigFile cf;

//sección de módulos principales
 public void setup(){
  /* size commented out by preprocessor */;
  frameRate(120);
  surface.setTitle("Creación de Videojuegos 2022");
  cf=new ConfigFile();
  idi=new Idiomas(cf.lang,cf.ns);
  gc=new GameControl();
}

 public void draw(){
  gc.display();
}

 public void mouseReleased(){
  gc.mouseControl(mouseX,mouseY,mouseButton);  
}

 public void keyReleased(){
  gc.keyControl();  
}
//Modulo Boton
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 3 de octubre de 2021
//fecha de ultima modificación: 3 de octubre de 2021
//comentario: la clase botoón permite indicar acciones dentro del juego, se usa 
//para elegir opciones del menú principal y la mayoría de comandos del juego. 
//Por su implementación solo contiene texto en su interior y un fondo sencillo de
//color y borde.
class Boton{
  int cx;          //posición en X del centro del botón
  int cy;          //posición en Y del centro del botón
  int an;          //anchura del botón
  int al;          //altura del botón
  int t;           //texto del botón 
  
  //constructor: los primeros dos parámetros son la posición, el segundo par sus medidas y el quinto
  //parámetro el índice del texto de idioma específico
  Boton(int x,int y,int b, int a, int s){
    cx=x;
    cy=y;
    an=b;
    al=a;
    t=s;
  }
  
  //graficado del botón
   public void display(){
    rectMode(CENTER);
    fill(0,0,0);
    stroke(255,255,255);
    rect(cx,cy,an,al);
    fill(255);
    textAlign(CENTER,CENTER);
    text(idi.mensaje(t),cx,cy);
  }
  
  
  //manejador de evento, devuelve true si el clic ocurrió sobre él
   public boolean isClicked(int x,int y, int b){
    boolean r=(b==LEFT &&(((x>=cx-(an/2))&&(x<=cx+(an/2))) && ((y>=cy-(al/2))&&(y<=cy+(al/2)))));
    return r;    
  } 
}
//Elaborado por: Angel Palacios Mirafuentes
//10 de octubre de 2022
//controla el archivo de configuracion

class ConfigFile {
String file[];
String save;

int lang;
int ns;//numero de caracteres

int velocidadHorizontalFondo;
int velocidadVerticalFondo;

int velocidadHorizontalFrente;
int velocidadVerticalFrente;

int velocidadHorizontalAscendentePersonaje;
int velocidadVerticalAscendentePersonaje;

int velocidadHorizontalDescendenteFrente;
int velocidadVerticalDescendenteFrente;

ConfigFile()
{
    file = loadStrings("config.dat");
    loadConfig();
}

 public void loadConfig()
{
    for (int i = 0; i < file.length; ++i) {
        if (isData("language",i)) lang=loadData(i);
        if (isData("langstr",i)) ns=loadData(i);
        if (isData("velocidadHorizontalFondo",i)) velocidadHorizontalFondo=loadData(i);
        if (isData("velocidadVerticalFondo",i)) velocidadVerticalFondo=loadData(i);

        if (isData("velocidadHorizontalFrente",i)) velocidadHorizontalFrente=loadData(i);
        if (isData("velocidadVerticalFrente",i)) velocidadVerticalFrente=loadData(i);

        if (isData("velocidadHorizontalAscendentePersonaje",i)) velocidadHorizontalAscendentePersonaje=loadData(i);
        if (isData("velocidadVerticalAscendentePersonaje",i)) velocidadVerticalAscendentePersonaje=loadData(i);

        if (isData("velocidadHorizontalDescendenteFrente",i)) velocidadHorizontalDescendenteFrente=loadData(i);
        if (isData("velocidadVerticalDescendenteFrente",i)) velocidadVerticalDescendenteFrente=loadData(i);
    }
}

 public boolean isData(String s,int d)
{
    return split(file[d],'=')[0].equals("#"+s);
}

 public int loadData(int d)
{
    return PApplet.parseInt(split(file[d],'=')[1]);
}

 public void saveConfig(Idiomas i)
{
    lang = i.getIdioma();
    save="";
    addSave("language",lang);
    addSave("langstr",ns);
    addSave("velocidadHorizontalFondo",velocidadHorizontalFondo);
    addSave("velocidadVerticalFondo",velocidadVerticalFondo);

    addSave("velocidadHorizontalFrente",velocidadHorizontalFrente);
    addSave("velocidadVerticalFrente",velocidadVerticalFrente);

    addSave("velocidadHorizontalAscendentePersonaje",velocidadHorizontalAscendentePersonaje);
    addSave("velocidadVerticalAscendentePersonaje",velocidadVerticalAscendentePersonaje);
    file=split(save,';');
    saveStrings("data/config.dat",file);
}


 public void addSave (String s,int d)
{
    save=save+"#"+s+"="+d+";";

}


}
//Módulo GameControl 
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 30 de septiembre de 2022
//comentario: Implementa la clase GameControl, la cual permitirá organizar la
//operación del juego, simplificando al máximo el método draw en el proceso 
//principal

class GameControl{
  PantCarga pncrg;
  PantIntro pnint;
  PantGame pngme;
  PantConfig pncfg;
  PantCreditos pncrd;
  PantInstruc pnins;
  PantScore pnscr;
  int pantact;
  
  GameControl(){
    pncrg=new PantCarga();
    pnint=new PantIntro();
    pngme=new PantGame();
    pncfg=new PantConfig();
    pncrd=new PantCreditos();
    pnins=new PantInstruc();
    pnscr=new PantScore();
    pantact=PNCRG;
  }
  
   public void display(){
    switch(pantact){
      case PNCRG:  pncrg.display();
                   break;
      case PNINT:  pnint.display();
                   break;
      case PNGME:  pngme.display();
                   break;
      case PNCFG:  pncfg.display();
                   break;
      case PNCRD:  pncrd.display();
                   break;
      case PNINS:  pnins.display();
                   break;
      case PNSCR:  pnscr.display();
                   break;             
    }
  }
  
   public void setPantAct(int p){
    pantact=p;
  }
  
   public void mouseControl(int x,int y, int b){
    switch(pantact){
      case PNINT: pnint.mouseControl(x,y,b);
                  break;
      case PNCFG: pncfg.mouseControl(x,y,b);
                  break;
      default:    if(mouseButton==LEFT)
                    gc.nextPant();
                  if(mouseButton==RIGHT)
                    gc.prevPant();
    }
  }
  
   public void keyControl(){}
  
  //esos métodos son temporales, solo para ilustrar el funcionamiento de cambio
  //de pantalla
   public void nextPant(){
    pantact++;
    if(pantact>PNSCR)
      pantact=PNCRG;
  }
  
   public void prevPant(){
    pantact--;
    if(pantact<PNCRG)
      pantact=PNSCR;
  }
}
//Proyecto de videojuego 2022 IDGS102
//Elaborado por: Angel Palacios Mirafuentes
//26 de septiembre de 2022

class Idiomas
{
    String idiomas [][];
    String file [];
    int idiomaActivo;
    int numeroMensajes;


    Idiomas(int lenguaje,int numMens)
    {
        idiomaActivo=lenguaje;
        numeroMensajes=numMens;
        idiomas = new String [numeroMensajes][2];
        cargaIdioma(IDIOMAESP);
        cargaIdioma(IDIOMAENG);
    }

     public void cargaIdioma(int i)
    {
        int n;

        file=loadStrings((i==IDIOMAESP) ? "esp.lang":"eng.lang");

        for (n = 0; n < numeroMensajes; ++n) {
            idiomas[n][i]= split(file[n], '=')[1];
        }
    }

     public void setIdioma(int i)
    {
        idiomaActivo = i;
    }

     public int getIdioma()
    {
        return idiomaActivo;
    }

     public String mensaje(int i)
    {
        return idiomas[i][idiomaActivo];
    }
}
//Módulo PantCarga 
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 30 de septiembre de 2022
//comentario: Implementa la clase PantCarga, la cual se encargará de operar la 
//pantalla de carga del juego.
class PantCarga{
  PantCarga(){}
  
   public void display(){
    background(color(150,0,0));
    stroke(color(255,255,255));
    textAlign(CENTER,CENTER);
    text(idi.mensaje(6),400,400);
  }
}
//Módulo PantConfig
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 3 de octubre de 2022
//fecha de ultima modificación: 3 de octubre de 2022
//comentario: Implementa la clase PantConfig, la cual se encargará de operar la 
//pantalla de carga del juego.

class PantConfig{

  Boton btnIdioma;
  Boton btnGuardar;
  Boton btnCancelar;

  PantConfig()
  {
    btnIdioma = new Boton(400, 350, 200, 60, 14);
    btnGuardar = new Boton(250, 550, 200, 60, 15);
    btnCancelar = new Boton(550, 550, 200, 60, 16);
  }
  
   public void display(){
    background(color(150,150,0));
    stroke(color(255,255,255));
    textAlign(CENTER,CENTER);
    text(idi.mensaje(7),400,100);

    btnIdioma.display();
    btnGuardar.display();
    btnCancelar.display();
  }

   public void mouseControl(int x,int y,int b)
  {
    if (btnIdioma.isClicked(x,y,b)) idi.setIdioma(((idi.getIdioma()==IDIOMAESP)?IDIOMAENG:IDIOMAESP));
    
    if(btnGuardar.isClicked(x,y,b)) cf.saveConfig(idi);
    
    if(btnCancelar.isClicked(x,y,b)) gc.setPantAct(PNINT);
    
  }
}
//Módulo PantCreds
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 3 de octubre de 2022
//fecha de ultima modificación: 3 de octubre de 2022
//comentario: Implementa la clase PantCreditos, la cual se encargará de operar la 
//pantalla de carga del juego.
class PantCreditos{
  PantCreditos(){}
  
   public void display(){
    background(color(150,0,150));
    stroke(color(255,255,255));
    textAlign(CENTER,CENTER);
    text(idi.mensaje(7),400,400);
  }
}
//Módulo PantGame 
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 30 de septiembre de 2022
//fecha de ultima modificación: 14 de octubre de 2022
//comentario: Implementa la clase PantGame, la cual controla las acciones del 
//juego.
class PantGame{

  Punto2D bg[];

  Punto2D fg[];

  Punto2D per;
  boolean dir;
  
  PantGame()
  {

    bg=new Punto2D[2];

    creaP2DArray(bg,400,400,800,0);

    fg=new Punto2D[4];

    creaP2DArray(fg,50,700,200,0);

    per=new Punto2D(240,600);
    dir=true;
  }
  
   public void display()
  {
    planoFondo();
    planoNivel();
    planoFrente();
    planoHUD();
    gameProgress();
  }
  
   public void planoFondo()
  {
    rectMode(CENTER);
    stroke(0);
    fill(128,128,0);

    graficarPlano(bg,800,800);

  }
  
   public void planoNivel()
  {
    ellipseMode(RADIUS);
    stroke(0,120,0);
    fill(0,200,0);
    circle(per.getX(),per.getY(),75);
  }
  
   public void planoFrente()
  {
    rectMode(CENTER);
    stroke(0);
    fill(200,200,0);
    graficarPlano(fg,50,200);
  }
  
   public void planoHUD()
  {
    rectMode(CENTER);
    stroke(0);
    fill(220,220,220);
    rect(400,60,800,120);
  }
  
   public void gameProgress()
  {

    muevePlano(bg,cf.velocidadHorizontalFondo,cf.velocidadVerticalFondo,-400,-1200);

    muevePlano(fg,cf.velocidadHorizontalFrente,cf.velocidadVerticalFrente,-25,825);

    per.move(((dir)?cf.velocidadHorizontalAscendentePersonaje:cf.velocidadVerticalAscendentePersonaje),((dir)?cf.velocidadHorizontalDescendenteFrente:cf.velocidadVerticalDescendenteFrente));

    if(per.getY()==500 || per.getY()==700) dir=!dir;  
  }

   public void creaP2DArray(Punto2D p[], int xi, int yi, int dx, int dy)
  {
    for(int i=0;i<p.length;i++) p[i]=new Punto2D(xi+i*dx,yi+i*dy);
  }

   public void muevePlano(Punto2D p[], int dx, int dy, int li,int ld)
  {
    for(int i=0;i<p.length;i++) 
    {
      p[i].move(dx,dy);
      
      if(p[i].getX()<li) p[i].setX(ld);
    }
  }

   public void graficarPlano(Punto2D p[], int x, int y)
  {
    for(int i=0;i<p.length;i++) rect(p[i].getX(),p[i].getY(),x,y);
  }


}
//Módulo PantInstruc
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 3 de octubre de 2022
//fecha de ultima modificación: 3 de octubre de 2022
//comentario: Implementa la clase PantInstruc, la cual se encargará de operar la 
//pantalla de carga del juego.
class PantInstruc{
  PantInstruc(){}
  
   public void display(){
    background(color(0,150,150));
    stroke(color(255,255,255));
    textAlign(CENTER,CENTER);
    text(idi.mensaje(10),400,400);
  }
}
//Módulo PantIntro 
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 30 de septiembre de 2022
//comentario: Implementa la clase PantIntro, la cual se encargará de controlar la
//pantalla de introducción del juego.

class PantIntro{
  Boton btncfg;
  Boton btncrd;
  Boton btnscr;
  Boton btngme;
  Boton btnins;
  Boton btnext;
  
  PantIntro(){
    btncfg=new Boton(400,200,200,60,0);
    btncrd=new Boton(400,300,200,60,1);
    btnscr=new Boton(400,400,200,60,2);
    btngme=new Boton(400,500,200,60,3);
    btnins=new Boton(400,600,200,60,4);
    btnext=new Boton(400,700,200,60,5);
  }
  
   public void display(){
    background(color(0,150,0));
    stroke(color(255,255,255));
    textAlign(CENTER,CENTER);
    text(idi.mensaje(11),400,100);
    btncfg.display();
    btncrd.display();
    btnscr.display();
    btngme.display();
    btnins.display();
    btnext.display();
  }
  
   public void mouseControl(int x, int y, int b){
    if(btncfg.isClicked(x,y,b)) gc.setPantAct(PNCFG);
    if(btncrd.isClicked(x,y,b)) gc.setPantAct(PNCRD);
    if(btnscr.isClicked(x,y,b)) gc.setPantAct(PNSCR);
    if(btngme.isClicked(x,y,b)) gc.setPantAct(PNGME);
    if(btnins.isClicked(x,y,b)) gc.setPantAct(PNINS);
    if(btnext.isClicked(x,y,b)) exit();
  }
}
//Módulo PantScore
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 3 de octubre de 2022
//comentario: Implementa la clase PantScore, la cual se encargará de operar la 
//pantalla de carga del juego.

class PantScore{
  PantScore(){}
  
   public void display(){
    background(color(150,150,150));
    stroke(color(255,255,255));
    textAlign(CENTER,CENTER);
    text(idi.mensaje(12),400,400);
  }
}
//Módulo Punto2D
//elaborado por: Angel Palacios Mirafuentes
//fecha de creación: 30 de septiembre de 2022
//comentario: Implementa la clase PantGame, la cual controla las acciones del 
//juego.

class Punto2D
{
    int x;
    int y;

    Punto2D(int x, int y)
    {
        this.x = x;
        this.y = y;
    }

     public int getX()
    {
        return x;
    }

     public int getY()
    {
        return y;
    }

     public void setX(int x)
    {
        this.x = x;
    }

     public void setY(int y)
    {
        this.y = y;
    }

     public void move(int dx,int dy)
    {
        x += dx;
        y += dy;
    }
}


  public void settings() { size(800, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Angel" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
